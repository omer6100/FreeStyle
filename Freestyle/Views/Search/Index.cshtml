@model Freestyle.Models.Search

@{
    ViewBag.Title = "Search";
}

<section>
    <h2>Search</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label for="type" class="col-md-2">
                <b>Search For:</b>
            </label>
            <div class="col-md-10">
                <select class="form-control" id="type" name="type">
                    <option value="Album" selected>Albums</option>
                    <option value="Artist">Artists</option>
                    <option value="Review">Reviews</option> 
                </select>
            </div>
        </div>

        <div class="form-group">
            <label for="primaryName" class="col-md-2" id="primary-name">
                <b>Album Title:</b>
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.primaryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.primaryName, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group advanced-item advanced-album advanced-review" id="s-name">
            <label for="secondaryName" class="col-md-2" id="secondary-name">
                <b>By Artist:</b>
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.secondaryName, new { htmlAttributes = new { @class = "form-control advanced-input", id = "s-name-input" } })
                @Html.ValidationMessageFor(model => model.secondaryName, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group advanced-item advanced-artist advanced-album" id="g-c">
            <label for="GenreCountry" class="col-md-2" id="genre-country">
                <b>Genre:</b>
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.GenreCountry, new { htmlAttributes = new { @class = "form-control advanced-input", id = "g-c-input" } })
                @Html.ValidationMessageFor(model => model.GenreCountry, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group advanced-item advanced-all">
            <h6><b class="col-md-2" id="date-range-label">Release Date: </b></h6>
            <div class="row">
                <div class="col-md-10">
                    <div class="form-inline">
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.DateLowerBound, new { htmlAttributes = new { @class = "form-control advanced-input", placeholder = "Starting from..." } })
                            @Html.ValidationMessageFor(model => model.DateLowerBound, null, new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.DateUpperBound, new { htmlAttributes = new { @class = "form-control advanced-input", placeholder = "Up to..." } })
                            @Html.ValidationMessageFor(model => model.DateUpperBound, null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group advanced-item advanced-all">
            <h6><b class="col-md-2">Score Range: </b></h6>
            <div class="row">
                <div class="col-md-10">
                    <div class="form-inline">
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.ScoreLowerBound, new { htmlAttributes = new { @class = "form-control advanced-input", placeholder = "Starting from..." } })
                            @Html.ValidationMessageFor(model => model.ScoreLowerBound, null, new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.ScoreUpperBound, new { htmlAttributes = new { @class = "form-control advanced-input", placeholder = "Up to..." } })
                            @Html.ValidationMessageFor(model => model.ScoreUpperBound, null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-primary" />
                <button type="button" class="btn btn-secondary" id="advanced-search-btn">
                    <span id="btn-val">Go To Advanced Search</span>
                </button>
            </div>
        </div>
    </div>
    }
</section>

@section Scripts
{
    <script>
        $(document).ready(function() {
            $(".advanced-item").hide();
            $(".advanced-input").val(null);
        });
    </script>
    <script>
        $(document).ready(function() {
            $("#advanced-search-btn").click(function() {
                var selectedType = $("option:selected").val();

                if ($("#btn-val").html() === "Go To Normal Search")
                {
                    $(".advanced-item").hide();
                    $(".advanced-input").val(null);
                    switch (selectedType) {
                        case "Album":
                            $("#primary-name").html("<b>Album Title:</b>");
                            break;
                        case "Review":
                            $("#primary-name").html("<b>Album Title:</b>");
                            break;
                        case "Artist":
                            $("#primary-name").html("<b>Artist's Name:</b>");
                            break;
                        default:
                                break;
                    }
                    $("#btn-val").html("Go To Advanced Search");

                }
                else
                {
                    $(".advanced-input").val(null);
                    $(".advanced-item").hide();
                    switch (selectedType) {
                    case "Album":
                        $("#primary-name").html("<b>Album Title:</b>");
                        $("#secondary-name").html("<b>By Artist:</b>");
                        $("#genre-country").html("<b>Genre:</b>");
                        $(".advanced-album").show();
                        break;
                    case "Review":
                        $("#primary-name").html("<b>Album Title:</b>");
                        $("#secondary-name").html("<b>Written By:</b>");
                        break;
                    case "Artist":
                        $("#primary-name").html("<b>Artist's Name:</b>");
                        $("#genre-country").html("<b>Origin Country:</b>");
                        $(".advanced-artist").show();
                            break;
                    default:
                        break;
                    }
                    $(".advanced-all").show();
                    $("#btn-val").html("Go To Normal Search");
                }

            });

        });
    </script>
    <script>
        $(document).ready(function() {
            $("select#type").change(function() {
                var selectedType = $(this).children("option:selected").val();
                var isAdvanced = $("#btn-val").html() === "Go To Normal Search";

                if (isAdvanced) {
                    $(".advanced-item").hide();
                    switch (selectedType) {
                    case "Album":
                        $("#primary-name").html("<b>Album Title:</b>");
                        $("#secondary-name").html("<b>By Artist:</b>");
                        $("#genre-country").html("<b>Genre:</b>");
                        $(".advanced-album").show();
                        break;
                    case "Artist":
                        $("#primary-name").html("<b>Artist's Name:</b>");
                        $("#genre-country").html("<b>Origin Country:</b>");
                        $(".advanced-artist").show();
                        break;
                    case "Review":
                        $("#primary-name").html("<b>Album Title:</b>");
                        $("#secondary-name").html("<b>Written By:</b>");
                        $(".advanced-review").show();
                        break;
                    default:
                    }
                    $(".advanced-all").show();
                } else {
                    $(".advanced-item").hide();
                    switch (selectedType) {
                    case "Album":
                    case "Review":
                        $("#primary-name").html("<b>Album Title:</b>");
                        break;
                    case "Artist":
                        $("#primary-name").html("<b>Artist's Name:</b>");
                        break;
                    default:
                    }
                }
            });
        });
    </script>
}
