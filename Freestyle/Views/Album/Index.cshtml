@model IEnumerable<Freestyle.Models.Album>

@{
    /**/

    ViewBag.Title = "Albums";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section>
    <h1>All Albums</h1>
    @Html.Partial("Tables/AlbumTablePartialView", Model)
</section>



@section Scripts{
    <script type="text/javascript">
        $(document).ready(function() {
            $('#albums-table').DataTable({
                "language": {
                    "zeroRecords": 'No Matching Records Found.<br>Would You Like To @Html.ActionLink("Add a New Album", "Create")?'
                },
                "columnDefs": [
                    { "targets": 2, "type": "date" },
                    { "targets": [4, 5], "type": "num" },
                    { "targets": 6, "orderable": false }
                ]

            });
        });
    </script>

}
@*///////////////////////////////////////////////////////////////////////////////////////////*@
<style>
    .bar {
        fill: steelblue;
    }
</style>
<script src="https://d3js.org/d3.v5.min.js"></script>
<svg width="600" height="500"></svg>
<script>

    var svg = d3.select("svg"),
        margin = 200,
        width = svg.attr("width") - margin,
        height = svg.attr("height") - margin

    svg.append("text")
        .attr("transform", "translate(100,0)")
        .attr("x", 50)
        .attr("y", 50)
        .attr("font-size", "24px")
        .text("XYZ Foods Stock Price")

    var xScale = d3.scaleBand().range([0, width]).padding(0.4),
        yScale = d3.scaleLinear().range([height, 0]);

    var g = svg.append("g")
        .attr("transform", "translate(" + 100 + "," + 100 + ")");

    var data = @Html.Raw(ViewBag.albums)

        xScale.domain(data.map(function (d) { return d.title; }));
        yScale.domain([0, d3.max(data, function (d) { return d.score; })]);

        g.append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(xScale))
            .append("text")
            .attr("y", height - 250)
            .attr("x", width - 100)
            .attr("text-anchor", "end")
            .attr("stroke", "black")
            .text("AlbumName");

        g.append("g")
            .call(d3.axisLeft(yScale).tickFormat(function (d) {
                return "$" + d;
            })
                .ticks(10))
            .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 6)
            .attr("dy", "-5.1em")
            .attr("text-anchor", "end")
            .attr("stroke", "black")
            .text("Score");

        g.selectAll(".bar")
            .data(data)
            .enter().append("rect")
            .attr("class", "bar")
            .attr("x", function (d) { return xScale(d.title); })
            .attr("y", function (d) { return yScale(d.score); })
            .attr("width", xScale.bandwidth())
            .attr("height", function (d) { return height - yScale(d.score); });


</script>